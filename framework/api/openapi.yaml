openapi: 3.1.0
info:
  title: AtendeAI 2.0 API
  version: 1.3.0
  description: |
    API completa do sistema AtendeAI 2.0 - Sistema multicl√≠nicas com IA conversacional,
    agendamentos inteligentes e integra√ß√£o WhatsApp Business + Google Calendar.
    
    ## üèóÔ∏è Arquitetura
    - **Microservi√ßos**: 8 servi√ßos especializados
    - **Multi-tenant**: Isolamento completo entre cl√≠nicas via RLS
    - **Autentica√ß√£o**: Supabase Auth com JWT tokens
    - **Rate Limiting**: Prote√ß√£o contra abuso
    - **Idempot√™ncia**: Opera√ß√µes seguras para retry
    
    ## üîê Seguran√ßa
    - **JWT Authentication**: Bearer tokens obrigat√≥rios
    - **Row Level Security**: Isolamento autom√°tico por cl√≠nica
    - **RBAC**: 5 perfis de usu√°rio (Admin Lify, Suporte, Administrador, Gestor, Atendente)
    - **Input Validation**: Valida√ß√£o rigorosa via JSON Schema
    
    ## üéØ Perfis de Usu√°rio
    - **Admin Lify**: Acesso total, pode navegar entre cl√≠nicas
    - **Suporte Lify**: Acesso total exceto criar cl√≠nicas
    - **Administrador**: Gest√£o completa da pr√≥pria cl√≠nica
    - **Gestor**: Opera√ß√µes + contextualiza√ß√£o da pr√≥pria cl√≠nica
    - **Atendente**: Opera√ß√µes b√°sicas da pr√≥pria cl√≠nica

  contact:
    name: AtendeAI Development Team
    email: dev@atendeai.com.br
  license:
    name: Proprietary
    
servers:
  - url: http://localhost:8000
    description: Development (Kong Gateway)
  - url: https://api.atendeai.com.br
    description: Production

security:
  - bearerAuth: []

paths:
  # =====================================================
  # AUTHENTICATION ENDPOINTS
  # =====================================================
  /auth/login:
    post:
      tags: [Authentication]
      summary: Login de usu√°rio
      description: Autentica usu√°rio e retorna tokens JWT
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  example: admin@clinica.com
                password:
                  type: string
                  minLength: 6
                  maxLength: 25
                  example: senha123
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  refresh_token:
                    type: string
                  expires_in:
                    type: integer
                    example: 3600
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimit'

  /auth/logout:
    post:
      tags: [Authentication]
      summary: Logout de usu√°rio
      description: Invalida tokens de acesso e refresh
      responses:
        '200':
          description: Logout realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logout realizado com sucesso
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/refresh:
    post:
      tags: [Authentication]
      summary: Renovar token de acesso
      description: Renova token de acesso usando refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refresh_token]
              properties:
                refresh_token:
                  type: string
      responses:
        '200':
          description: Token renovado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  expires_in:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/profile:
    get:
      tags: [Authentication]
      summary: Perfil do usu√°rio autenticado
      description: Retorna dados do usu√°rio e permiss√µes
      responses:
        '200':
          description: Dados do perfil
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/User'
                  - type: object
                    properties:
                      clinic:
                        $ref: '#/components/schemas/Clinic'
                      permissions:
                        type: array
                        items:
                          type: string
                        example: [read_conversations, manage_appointments]

  # =====================================================
  # CLINICS MANAGEMENT
  # =====================================================
  /clinics:
    get:
      tags: [Clinics]
      summary: Listar cl√≠nicas
      description: |
        Lista cl√≠nicas baseado no perfil do usu√°rio:
        - Admin Lify/Suporte: Todas as cl√≠nicas
        - Outros perfis: Apenas a pr√≥pria cl√≠nica
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive]
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Lista de cl√≠nicas
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Clinic'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

    post:
      tags: [Clinics]
      summary: Criar nova cl√≠nica
      description: Criar nova cl√≠nica (apenas Admin Lify)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClinicRequest'
      responses:
        '201':
          description: Cl√≠nica criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/ValidationError'

  /clinics/{clinic_id}:
    get:
      tags: [Clinics]
      summary: Obter cl√≠nica por ID
      parameters:
        - $ref: '#/components/parameters/ClinicIdParam'
      responses:
        '200':
          description: Dados da cl√≠nica
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Clinics]
      summary: Atualizar cl√≠nica
      parameters:
        - $ref: '#/components/parameters/ClinicIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClinicRequest'
      responses:
        '200':
          description: Cl√≠nica atualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      tags: [Clinics]
      summary: Remover cl√≠nica
      description: Remover cl√≠nica (apenas Admin Lify)
      parameters:
        - $ref: '#/components/parameters/ClinicIdParam'
      responses:
        '204':
          description: Cl√≠nica removida com sucesso
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /clinics/{clinic_id}/context:
    get:
      tags: [Clinics]
      summary: Relat√≥rio de contextualiza√ß√£o
      description: Retorna relat√≥rio executivo das configura√ß√µes JSON da cl√≠nica
      parameters:
        - $ref: '#/components/parameters/ClinicIdParam'
      responses:
        '200':
          description: Relat√≥rio de contextualiza√ß√£o
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClinicContextReport'

  # =====================================================
  # USERS MANAGEMENT
  # =====================================================
  /users:
    get:
      tags: [Users]
      summary: Listar usu√°rios
      description: Lista usu√°rios da cl√≠nica do usu√°rio autenticado
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - name: role
          in: query
          schema:
            $ref: '#/components/schemas/UserRole'
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive]
      responses:
        '200':
          description: Lista de usu√°rios
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

    post:
      tags: [Users]
      summary: Criar novo usu√°rio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Usu√°rio criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/ValidationError'

  /users/{user_id}:
    get:
      tags: [Users]
      summary: Obter usu√°rio por ID
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      responses:
        '200':
          description: Dados do usu√°rio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    put:
      tags: [Users]
      summary: Atualizar usu√°rio
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Usu√°rio atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    delete:
      tags: [Users]
      summary: Remover usu√°rio
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      responses:
        '204':
          description: Usu√°rio removido com sucesso

  # =====================================================
  # CONVERSATIONS
  # =====================================================
  /conversations:
    get:
      tags: [Conversations]
      summary: Listar conversas
      description: Lista conversas da cl√≠nica do usu√°rio autenticado
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - name: status
          in: query
          schema:
            type: string
            enum: [active, paused, closed]
        - name: conversation_type
          in: query
          schema:
            type: string
            enum: [chatbot, human, mixed]
        - name: tags
          in: query
          schema:
            type: array
            items:
              type: string
        - name: customer_phone
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Lista de conversas
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Conversation'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /conversations/{conversation_id}/messages:
    get:
      tags: [Conversations]
      summary: Listar mensagens da conversa
      parameters:
        - $ref: '#/components/parameters/ConversationIdParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          description: Lista de mensagens
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

    post:
      tags: [Conversations]
      summary: Enviar mensagem
      parameters:
        - $ref: '#/components/parameters/ConversationIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
      responses:
        '201':
          description: Mensagem enviada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

  /conversations/{conversation_id}/bot-control:
    put:
      tags: [Conversations]
      summary: Controlar chatbot
      description: Ativar/desativar chatbot na conversa (assumir/devolver controle)
      parameters:
        - $ref: '#/components/parameters/ConversationIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [bot_active]
              properties:
                bot_active:
                  type: boolean
                  description: true = chatbot ativo, false = atendimento humano
      responses:
        '200':
          description: Controle do chatbot atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'

  /conversations/{conversation_id}/tags:
    put:
      tags: [Conversations]
      summary: Gerenciar etiquetas da conversa
      parameters:
        - $ref: '#/components/parameters/ConversationIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [tags]
              properties:
                tags:
                  type: array
                  items:
                    type: string
                    format: uuid
      responses:
        '200':
          description: Etiquetas atualizadas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'

  /conversations/broadcast:
    post:
      tags: [Conversations]
      summary: Enviar mensagem em massa
      description: Enviar mensagem padr√£o para m√∫ltiplos contatos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BroadcastMessageRequest'
      responses:
        '202':
          description: Mensagem em massa processando
          content:
            application/json:
              schema:
                type: object
                properties:
                  broadcast_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    example: processing
                  total_recipients:
                    type: integer

  # =====================================================
  # APPOINTMENTS & CALENDAR
  # =====================================================
  /appointments:
    get:
      tags: [Appointments]
      summary: Listar agendamentos
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - name: start_date
          in: query
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          schema:
            type: string
            format: date-time
        - name: status
          in: query
          schema:
            type: string
            enum: [scheduled, confirmed, cancelled, completed, no_show]
        - name: appointment_type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Lista de agendamentos
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Appointment'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

    post:
      tags: [Appointments]
      summary: Criar agendamento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppointmentRequest'
      responses:
        '201':
          description: Agendamento criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'

  /appointments/{appointment_id}:
    get:
      tags: [Appointments]
      summary: Obter agendamento por ID
      parameters:
        - $ref: '#/components/parameters/AppointmentIdParam'
      responses:
        '200':
          description: Dados do agendamento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'

    put:
      tags: [Appointments]
      summary: Atualizar agendamento
      parameters:
        - $ref: '#/components/parameters/AppointmentIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppointmentRequest'
      responses:
        '200':
          description: Agendamento atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'

    delete:
      tags: [Appointments]
      summary: Cancelar agendamento
      parameters:
        - $ref: '#/components/parameters/AppointmentIdParam'
      responses:
        '204':
          description: Agendamento cancelado

  /google/auth:
    post:
      tags: [Google Calendar]
      summary: Autentica√ß√£o OAuth Google
      description: Iniciar fluxo OAuth2 para integra√ß√£o com Google Calendar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                redirect_uri:
                  type: string
                  format: uri
                  example: http://localhost:3000/auth/google/callback
      responses:
        '200':
          description: URL de autoriza√ß√£o OAuth
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_url:
                    type: string
                    format: uri
                  state:
                    type: string

  /google/callback:
    post:
      tags: [Google Calendar]
      summary: Callback OAuth Google
      description: Processar callback OAuth e salvar tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [code, state]
              properties:
                code:
                  type: string
                state:
                  type: string
      responses:
        '200':
          description: Integra√ß√£o configurada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIntegration'

  /google/calendars:
    get:
      tags: [Google Calendar]
      summary: Listar calend√°rios integrados
      responses:
        '200':
          description: Lista de calend√°rios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoogleIntegration'

  /google/events:
    get:
      tags: [Google Calendar]
      summary: Listar eventos do calend√°rio
      parameters:
        - name: calendar_id
          in: query
          required: true
          schema:
            type: string
        - name: start_date
          in: query
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Lista de eventos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoogleEvent'

  # =====================================================
  # DASHBOARD & METRICS
  # =====================================================
  /dashboard/metrics:
    get:
      tags: [Dashboard]
      summary: M√©tricas do dashboard
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: M√©tricas do dashboard
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardMetrics'

  /dashboard/conversations-stats:
    get:
      tags: [Dashboard]
      summary: Estat√≠sticas de conversas
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [today, week, month]
      responses:
        '200':
          description: Estat√≠sticas de conversas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationStats'

  /dashboard/appointments-stats:
    get:
      tags: [Dashboard]
      summary: Estat√≠sticas de agendamentos
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [today, week, month]
      responses:
        '200':
          description: Estat√≠sticas de agendamentos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentStats'

  # =====================================================
  # WHATSAPP INTEGRATION
  # =====================================================
  /whatsapp/webhook:
    post:
      tags: [WhatsApp]
      summary: Webhook Meta WhatsApp
      description: Endpoint para receber webhooks da Meta WhatsApp Business API
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppWebhook'
      responses:
        '200':
          description: Webhook processado
        '400':
          description: Payload inv√°lido
        '401':
          description: Verifica√ß√£o webhook falhou

  /whatsapp/conversations:
    get:
      tags: [WhatsApp]
      summary: Conversas WhatsApp
      description: Lista conversas WhatsApp da cl√≠nica
      responses:
        '200':
          description: Lista de conversas WhatsApp
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WhatsAppConversation'

  /whatsapp/send-message:
    post:
      tags: [WhatsApp]
      summary: Enviar mensagem WhatsApp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendWhatsAppMessageRequest'
      responses:
        '201':
          description: Mensagem enviada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message_id:
                    type: string
                  status:
                    type: string
                    example: sent

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    PageParam:
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
        default: 1
    
    LimitParam:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

    ClinicIdParam:
      name: clinic_id
      in: path
      required: true
      schema:
        type: string
        format: uuid

    UserIdParam:
      name: user_id
      in: path
      required: true
      schema:
        type: string
        format: uuid

    ConversationIdParam:
      name: conversation_id
      in: path
      required: true
      schema:
        type: string
        format: uuid

    AppointmentIdParam:
      name: appointment_id
      in: path
      required: true
      schema:
        type: string
        format: uuid

  schemas:
    # Core Entities
    Clinic:
      type: object
      required: [id, name, whatsapp_number, context_json, status]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 255
        whatsapp_number:
          type: string
          pattern: '^\+[1-9]\d{1,14}$'
          example: "+5511999999999"
        meta_webhook_url:
          type: string
          format: uri
        whatsapp_id:
          type: string
        context_json:
          type: object
          description: JSON de contextualiza√ß√£o completo da cl√≠nica
        simulation_mode:
          type: boolean
          default: false
        status:
          type: string
          enum: [active, inactive]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    User:
      type: object
      required: [id, name, login, role, clinic_id, status]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 30
        login:
          type: string
          maxLength: 25
        role:
          $ref: '#/components/schemas/UserRole'
        clinic_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [active, inactive]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    UserRole:
      type: string
      enum: [admin_lify, suporte_lify, atendente, gestor, administrador]

    Conversation:
      type: object
      required: [id, clinic_id, customer_phone, conversation_type, status, bot_active]
      properties:
        id:
          type: string
          format: uuid
        clinic_id:
          type: string
          format: uuid
        customer_phone:
          type: string
          pattern: '^\+[1-9]\d{1,14}$'
        conversation_type:
          type: string
          enum: [chatbot, human, mixed]
        status:
          type: string
          enum: [active, paused, closed]
        bot_active:
          type: boolean
        assigned_user_id:
          type: string
          format: uuid
          nullable: true
        tags:
          type: array
          items:
            type: string
            format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Message:
      type: object
      required: [id, conversation_id, sender_type, content, message_type]
      properties:
        id:
          type: string
          format: uuid
        conversation_id:
          type: string
          format: uuid
        sender_type:
          type: string
          enum: [customer, bot, human]
        content:
          type: string
        message_type:
          type: string
          enum: [text, image, audio, video, document]
        whatsapp_message_id:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time

    Appointment:
      type: object
      required: [id, clinic_id, customer_info, appointment_type, datetime, duration, status]
      properties:
        id:
          type: string
          format: uuid
        clinic_id:
          type: string
          format: uuid
        customer_info:
          type: object
          description: Dados do cliente (nome, telefone, etc.)
        google_event_id:
          type: string
          nullable: true
        appointment_type:
          type: string
        datetime:
          type: string
          format: date-time
        duration:
          type: integer
          minimum: 1
          description: Dura√ß√£o em minutos
        status:
          type: string
          enum: [scheduled, confirmed, cancelled, completed, no_show]
        priority:
          type: integer
          minimum: 1
          maximum: 10
        confirmation_sent:
          type: boolean
        confirmation_received:
          type: boolean
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    GoogleIntegration:
      type: object
      properties:
        id:
          type: string
          format: uuid
        clinic_id:
          type: string
          format: uuid
        calendar_id:
          type: string
        calendar_name:
          type: string
        status:
          type: string
          enum: [active, expired, revoked, error]
        expires_at:
          type: string
          format: date-time

    # Request/Response Schemas
    CreateClinicRequest:
      type: object
      required: [name, whatsapp_number, context_json]
      properties:
        name:
          type: string
          maxLength: 255
        whatsapp_number:
          type: string
          pattern: '^\+[1-9]\d{1,14}$'
        meta_webhook_url:
          type: string
          format: uri
        whatsapp_id:
          type: string
        context_json:
          type: object
        simulation_mode:
          type: boolean
          default: false

    UpdateClinicRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        whatsapp_number:
          type: string
          pattern: '^\+[1-9]\d{1,14}$'
        meta_webhook_url:
          type: string
          format: uri
        whatsapp_id:
          type: string
        context_json:
          type: object
        simulation_mode:
          type: boolean

    CreateUserRequest:
      type: object
      required: [name, login, password, role]
      properties:
        name:
          type: string
          maxLength: 30
        login:
          type: string
          maxLength: 25
        password:
          type: string
          minLength: 6
          maxLength: 25
        role:
          $ref: '#/components/schemas/UserRole'
        clinic_id:
          type: string
          format: uuid
          description: Obrigat√≥rio apenas para Admin Lify criando usu√°rio de outra cl√≠nica

    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 30
        login:
          type: string
          maxLength: 25
        password:
          type: string
          minLength: 6
          maxLength: 25
        role:
          $ref: '#/components/schemas/UserRole'
        status:
          type: string
          enum: [active, inactive]

    SendMessageRequest:
      type: object
      required: [content, message_type]
      properties:
        content:
          type: string
        message_type:
          type: string
          enum: [text, image, audio, video, document]
          default: text
        file_url:
          type: string
          format: uri
          description: URL do arquivo para tipos de m√≠dia

    BroadcastMessageRequest:
      type: object
      required: [content, recipients]
      properties:
        content:
          type: string
        recipients:
          type: array
          items:
            type: string
            description: N√∫meros de telefone ou IDs de conversa
        message_type:
          type: string
          enum: [text, image, audio, video, document]
          default: text

    CreateAppointmentRequest:
      type: object
      required: [customer_info, appointment_type, datetime]
      properties:
        customer_info:
          type: object
          required: [name, phone]
          properties:
            name:
              type: string
            phone:
              type: string
            email:
              type: string
              format: email
        appointment_type:
          type: string
        datetime:
          type: string
          format: date-time
        duration:
          type: integer
          minimum: 1
          default: 30
        notes:
          type: string

    UpdateAppointmentRequest:
      type: object
      properties:
        customer_info:
          type: object
        appointment_type:
          type: string
        datetime:
          type: string
          format: date-time
        duration:
          type: integer
          minimum: 1
        status:
          type: string
          enum: [scheduled, confirmed, cancelled, completed, no_show]
        notes:
          type: string

    # Dashboard & Metrics
    DashboardMetrics:
      type: object
      properties:
        conversations:
          type: object
          properties:
            new_conversations:
              type: integer
            ongoing_conversations:
              type: integer
            awaiting_response:
              type: integer
            human_takeovers:
              type: integer
            avg_response_time_seconds:
              type: number
            auto_resolution_rate:
              type: number
              minimum: 0
              maximum: 1
        appointments:
          type: object
          properties:
            today:
              type: integer
            this_week:
              type: integer
            this_month:
              type: integer
            total_events:
              type: integer

    ConversationStats:
      type: object
      properties:
        total_conversations:
          type: integer
        by_status:
          type: object
          properties:
            active:
              type: integer
            paused:
              type: integer
            closed:
              type: integer
        by_type:
          type: object
          properties:
            chatbot:
              type: integer
            human:
              type: integer
            mixed:
              type: integer
        by_tags:
          type: array
          items:
            type: object
            properties:
              tag_name:
                type: string
              count:
                type: integer

    AppointmentStats:
      type: object
      properties:
        total_appointments:
          type: integer
        by_status:
          type: object
          properties:
            scheduled:
              type: integer
            confirmed:
              type: integer
            cancelled:
              type: integer
            completed:
              type: integer
            no_show:
              type: integer
        by_type:
          type: array
          items:
            type: object
            properties:
              type_name:
                type: string
              count:
                type: integer

    # WhatsApp Schemas
    WhatsAppWebhook:
      type: object
      properties:
        object:
          type: string
        entry:
          type: array
          items:
            type: object

    WhatsAppConversation:
      type: object
      properties:
        id:
          type: string
        phone_number:
          type: string
        display_name:
          type: string
        last_message:
          type: object
        status:
          type: string

    SendWhatsAppMessageRequest:
      type: object
      required: [to, content]
      properties:
        to:
          type: string
          description: N√∫mero do destinat√°rio
        content:
          type: string
        message_type:
          type: string
          enum: [text, image, audio, video, document]
          default: text

    GoogleEvent:
      type: object
      properties:
        id:
          type: string
        summary:
          type: string
        start:
          type: object
        end:
          type: object
        status:
          type: string

    ClinicContextReport:
      type: object
      description: Relat√≥rio executivo das configura√ß√µes JSON da cl√≠nica
      properties:
        clinic_info:
          type: object
        ai_agent_config:
          type: object
        business_hours:
          type: object
        appointment_types:
          type: array
          items:
            type: object
        professionals:
          type: array
          items:
            type: object

    # Common Schemas
    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        pages:
          type: integer
        has_next:
          type: boolean
        has_prev:
          type: boolean

    Error:
      type: object
      properties:
        type:
          type: string
          format: uri
          example: https://api.atendeai.com.br/errors/validation-error
        title:
          type: string
          example: Erro de valida√ß√£o
        status:
          type: integer
          example: 422
        detail:
          type: string
          example: O campo 'email' √© obrigat√≥rio
        instance:
          type: string
          format: uri
          example: /users/123
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string

  responses:
    Unauthorized:
      description: Token de acesso inv√°lido ou expirado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      headers:
        WWW-Authenticate:
          schema:
            type: string
            example: Bearer error="invalid_token"

    Forbidden:
      description: Usu√°rio n√£o tem permiss√£o para esta opera√ß√£o
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Recurso n√£o encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ValidationError:
      description: Erro de valida√ß√£o dos dados de entrada
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    RateLimit:
      description: Limite de requisi√ß√µes excedido
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      headers:
        Retry-After:
          schema:
            type: integer
            example: 60
        X-RateLimit-Limit:
          schema:
            type: integer
        X-RateLimit-Remaining:
          schema:
            type: integer
        X-RateLimit-Reset:
          schema:
            type: integer

tags:
  - name: Authentication
    description: Autentica√ß√£o e autoriza√ß√£o de usu√°rios
  - name: Clinics
    description: Gest√£o de cl√≠nicas multicl√≠nicas
  - name: Users
    description: Gest√£o de usu√°rios e perfis
  - name: Conversations
    description: Conversas WhatsApp e controle chatbot
  - name: Appointments
    description: Agendamentos e sincroniza√ß√£o calend√°rio
  - name: Google Calendar
    description: Integra√ß√£o OAuth Google Calendar
  - name: Dashboard
    description: M√©tricas e estat√≠sticas operacionais
  - name: WhatsApp
    description: Integra√ß√£o WhatsApp Business API