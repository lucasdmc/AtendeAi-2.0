{"numTotalTestSuites":41,"numPassedTestSuites":40,"numFailedTestSuites":1,"numPendingTestSuites":0,"numTotalTests":60,"numPassedTests":37,"numFailedTests":23,"numPendingTests":0,"numTodoTests":0,"startTime":1757524502813,"success":false,"testResults":[{"assertionResults":[],"startTime":1757524502813,"endTime":1757524502813,"status":"failed","message":"  \u001b[31m×\u001b[0m Expression expected\n    ╭─[\u001b[36;1;4m/Users/lucascantoni/Desktop/AtendeAí 2.0/tests/integration/agenda_smoke.test.ts:82:1\u001b[0m]\n \u001b[2m79\u001b[0m │       status: 'disconnected'\n \u001b[2m80\u001b[0m │     });\n \u001b[2m81\u001b[0m │ \n \u001b[2m82\u001b[0m │     render(<Agenda />, { wrapper: createTestWrapper() });\n    · \u001b[35;1m                   ─\u001b[0m\n \u001b[2m83\u001b[0m │ \n \u001b[2m84\u001b[0m │     expect(screen.getByText('Agenda')).toBeInTheDocument();\n \u001b[2m85\u001b[0m │     expect(screen.getByText('Carregando integração...')).toBeInTheDocument();\n    ╰────\n  \u001b[31m×\u001b[0m Expression expected\n    ╭─[\u001b[36;1;4m/Users/lucascantoni/Desktop/AtendeAí 2.0/tests/integration/agenda_smoke.test.ts:82:1\u001b[0m]\n \u001b[2m79\u001b[0m │       status: 'disconnected'\n \u001b[2m80\u001b[0m │     });\n \u001b[2m81\u001b[0m │ \n \u001b[2m82\u001b[0m │     render(<Agenda />, { wrapper: createTestWrapper() });\n    · \u001b[35;1m                    ─\u001b[0m\n \u001b[2m83\u001b[0m │ \n \u001b[2m84\u001b[0m │     expect(screen.getByText('Agenda')).toBeInTheDocument();\n \u001b[2m85\u001b[0m │     expect(screen.getByText('Carregando integração...')).toBeInTheDocument();\n    ╰────\n  \u001b[31m×\u001b[0m Expression expected\n    ╭─[\u001b[36;1;4m/Users/lucascantoni/Desktop/AtendeAí 2.0/tests/integration/agenda_smoke.test.ts:82:1\u001b[0m]\n \u001b[2m79\u001b[0m │       status: 'disconnected'\n \u001b[2m80\u001b[0m │     });\n \u001b[2m81\u001b[0m │ \n \u001b[2m82\u001b[0m │     render(<Agenda />, { wrapper: createTestWrapper() });\n    · \u001b[35;1m                     ─\u001b[0m\n \u001b[2m83\u001b[0m │ \n \u001b[2m84\u001b[0m │     expect(screen.getByText('Agenda')).toBeInTheDocument();\n \u001b[2m85\u001b[0m │     expect(screen.getByText('Carregando integração...')).toBeInTheDocument();\n    ╰────\n\n\nCaused by:\n    Syntax Error","name":"/Users/lucascantoni/Desktop/AtendeAí 2.0/tests/integration/agenda_smoke.test.ts"},{"assertionResults":[{"ancestorTitles":["","Auth Service - Integration Tests","Authentication Endpoints"],"fullName":" Auth Service - Integration Tests Authentication Endpoints POST /auth/login - should authenticate valid user","status":"failed","title":"POST /auth/login - should authenticate valid user","duration":271,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Authentication Endpoints"],"fullName":" Auth Service - Integration Tests Authentication Endpoints POST /auth/login - should reject invalid credentials","status":"failed","title":"POST /auth/login - should reject invalid credentials","duration":1,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Authentication Endpoints"],"fullName":" Auth Service - Integration Tests Authentication Endpoints POST /auth/login - should reject non-existent user","status":"failed","title":"POST /auth/login - should reject non-existent user","duration":1,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Token Validation"],"fullName":" Auth Service - Integration Tests Token Validation GET /auth/validate - should validate valid token","status":"failed","title":"GET /auth/validate - should validate valid token","duration":1,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Token Validation"],"fullName":" Auth Service - Integration Tests Token Validation GET /auth/validate - should reject invalid token","status":"failed","title":"GET /auth/validate - should reject invalid token","duration":1,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Token Validation"],"fullName":" Auth Service - Integration Tests Token Validation GET /auth/validate - should reject missing token","status":"failed","title":"GET /auth/validate - should reject missing token","duration":0,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Token Refresh"],"fullName":" Auth Service - Integration Tests Token Refresh POST /auth/refresh - should refresh valid token","status":"failed","title":"POST /auth/refresh - should refresh valid token","duration":1,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Token Refresh"],"fullName":" Auth Service - Integration Tests Token Refresh POST /auth/refresh - should reject invalid refresh token","status":"failed","title":"POST /auth/refresh - should reject invalid refresh token","duration":0,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Logout"],"fullName":" Auth Service - Integration Tests Logout POST /auth/logout - should logout successfully","status":"failed","title":"POST /auth/logout - should logout successfully","duration":1,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Rate Limiting"],"fullName":" Auth Service - Integration Tests Rate Limiting should limit login attempts","status":"failed","title":"should limit login attempts","duration":0,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Input Validation"],"fullName":" Auth Service - Integration Tests Input Validation should validate email format","status":"failed","title":"should validate email format","duration":1,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Input Validation"],"fullName":" Auth Service - Integration Tests Input Validation should validate password length","status":"failed","title":"should validate password length","duration":0,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Database Connection"],"fullName":" Auth Service - Integration Tests Database Connection should handle database connection errors gracefully","status":"failed","title":"should handle database connection errors gracefully","duration":1,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}},{"ancestorTitles":["","Auth Service - Integration Tests","Redis Connection"],"fullName":" Auth Service - Integration Tests Redis Connection should handle Redis connection errors gracefully","status":"failed","title":"should handle Redis connection errors gracefully","duration":1,"failureMessages":["Pool.mockReturnValue is not a function","jest is not defined"],"location":{"line":62,"column":10}}],"startTime":1757524504205,"endTime":1757524504485,"status":"failed","message":"","name":"/Users/lucascantoni/Desktop/AtendeAí 2.0/backend/services/auth-service/tests/integration/auth.integration.test.js"},{"assertionResults":[{"ancestorTitles":["","Auth Service - Unit Tests","Password Hashing"],"fullName":" Auth Service - Unit Tests Password Hashing should hash password correctly","status":"passed","title":"should hash password correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","Password Hashing"],"fullName":" Auth Service - Unit Tests Password Hashing should compare password correctly","status":"passed","title":"should compare password correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","JWT Token Generation"],"fullName":" Auth Service - Unit Tests JWT Token Generation should generate access token correctly","status":"passed","title":"should generate access token correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","JWT Token Generation"],"fullName":" Auth Service - Unit Tests JWT Token Generation should generate refresh token correctly","status":"passed","title":"should generate refresh token correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","JWT Token Generation"],"fullName":" Auth Service - Unit Tests JWT Token Generation should verify token correctly","status":"passed","title":"should verify token correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","Input Validation"],"fullName":" Auth Service - Unit Tests Input Validation should validate email format","status":"passed","title":"should validate email format","duration":0,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","Input Validation"],"fullName":" Auth Service - Unit Tests Input Validation should validate password strength","status":"passed","title":"should validate password strength","duration":0,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","Error Handling"],"fullName":" Auth Service - Unit Tests Error Handling should handle validation errors","status":"passed","title":"should handle validation errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","Error Handling"],"fullName":" Auth Service - Unit Tests Error Handling should handle JWT verification errors","status":"passed","title":"should handle JWT verification errors","duration":0,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","Role Validation"],"fullName":" Auth Service - Unit Tests Role Validation should validate admin role","status":"passed","title":"should validate admin role","duration":1,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","Role Validation"],"fullName":" Auth Service - Unit Tests Role Validation should validate clinic admin role","status":"passed","title":"should validate clinic admin role","duration":0,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","Security Features"],"fullName":" Auth Service - Unit Tests Security Features should use secure JWT secret","status":"passed","title":"should use secure JWT secret","duration":0,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","Security Features"],"fullName":" Auth Service - Unit Tests Security Features should use appropriate bcrypt rounds","status":"passed","title":"should use appropriate bcrypt rounds","duration":1,"failureMessages":[]},{"ancestorTitles":["","Auth Service - Unit Tests","Security Features"],"fullName":" Auth Service - Unit Tests Security Features should set appropriate token expiry","status":"passed","title":"should set appropriate token expiry","duration":0,"failureMessages":[]}],"startTime":1757524503939,"endTime":1757524503946,"status":"passed","message":"","name":"/Users/lucascantoni/Desktop/AtendeAí 2.0/backend/services/auth-service/tests/unit/auth.test.js"},{"assertionResults":[{"ancestorTitles":["","MetaAPICircuitBreaker","constructor"],"fullName":" MetaAPICircuitBreaker constructor should initialize with default values","status":"passed","title":"should initialize with default values","duration":4,"failureMessages":[]},{"ancestorTitles":["","MetaAPICircuitBreaker","constructor"],"fullName":" MetaAPICircuitBreaker constructor should initialize with custom values","status":"passed","title":"should initialize with custom values","duration":1,"failureMessages":[]},{"ancestorTitles":["","MetaAPICircuitBreaker","execute"],"fullName":" MetaAPICircuitBreaker execute should execute operation when circuit is CLOSED","status":"passed","title":"should execute operation when circuit is CLOSED","duration":2,"failureMessages":[]},{"ancestorTitles":["","MetaAPICircuitBreaker","execute"],"fullName":" MetaAPICircuitBreaker execute should execute operation when circuit is HALF_OPEN","status":"failed","title":"should execute operation when circuit is HALF_OPEN","duration":14,"failureMessages":["Circuit breaker is OPEN"],"location":{"line":15,"column":23}},{"ancestorTitles":["","MetaAPICircuitBreaker","execute"],"fullName":" MetaAPICircuitBreaker execute should reject operation when circuit is OPEN","status":"passed","title":"should reject operation when circuit is OPEN","duration":5,"failureMessages":[]},{"ancestorTitles":["","MetaAPICircuitBreaker","onSuccess"],"fullName":" MetaAPICircuitBreaker onSuccess should reset failure count and close circuit","status":"passed","title":"should reset failure count and close circuit","duration":0,"failureMessages":[]},{"ancestorTitles":["","MetaAPICircuitBreaker","onFailure"],"fullName":" MetaAPICircuitBreaker onFailure should increment failure count","status":"passed","title":"should increment failure count","duration":1,"failureMessages":[]},{"ancestorTitles":["","MetaAPICircuitBreaker","onFailure"],"fullName":" MetaAPICircuitBreaker onFailure should open circuit when failure threshold is reached","status":"passed","title":"should open circuit when failure threshold is reached","duration":0,"failureMessages":[]},{"ancestorTitles":["","MetaAPICircuitBreaker","onFailure"],"fullName":" MetaAPICircuitBreaker onFailure should record last failure time","status":"passed","title":"should record last failure time","duration":1,"failureMessages":[]},{"ancestorTitles":["","MetaAPICircuitBreaker","shouldAttemptReset"],"fullName":" MetaAPICircuitBreaker shouldAttemptReset should return false immediately after failure","status":"passed","title":"should return false immediately after failure","duration":0,"failureMessages":[]},{"ancestorTitles":["","MetaAPICircuitBreaker","shouldAttemptReset"],"fullName":" MetaAPICircuitBreaker shouldAttemptReset should return true after recovery timeout","status":"failed","title":"should return true after recovery timeout","duration":10,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":138,"column":57}},{"ancestorTitles":["","MetaAPICircuitBreaker","getState"],"fullName":" MetaAPICircuitBreaker getState should return current state","status":"passed","title":"should return current state","duration":1,"failureMessages":[]},{"ancestorTitles":["","MetaAPICircuitBreaker","getFailureCount"],"fullName":" MetaAPICircuitBreaker getFailureCount should return current failure count","status":"passed","title":"should return current failure count","duration":1,"failureMessages":[]}],"startTime":1757524503969,"endTime":1757524504011,"status":"failed","message":"","name":"/Users/lucascantoni/Desktop/AtendeAí 2.0/backend/services/whatsapp-service/tests/unit/circuitBreaker.test.js"},{"assertionResults":[{"ancestorTitles":["","WebhookValidator","validateVerification"],"fullName":" WebhookValidator validateVerification should validate correct verification token","status":"passed","title":"should validate correct verification token","duration":1,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","validateVerification"],"fullName":" WebhookValidator validateVerification should throw error for invalid verification token","status":"passed","title":"should throw error for invalid verification token","duration":1,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","validateVerification"],"fullName":" WebhookValidator validateVerification should throw error for non-subscribe mode","status":"passed","title":"should throw error for non-subscribe mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","validateSignature"],"fullName":" WebhookValidator validateSignature should validate correct signature","status":"passed","title":"should validate correct signature","duration":0,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","validateSignature"],"fullName":" WebhookValidator validateSignature should throw error for invalid signature","status":"passed","title":"should throw error for invalid signature","duration":1,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","validateSignature"],"fullName":" WebhookValidator validateSignature should handle empty payload","status":"passed","title":"should handle empty payload","duration":0,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","generateSignature"],"fullName":" WebhookValidator generateSignature should generate consistent signature for same payload","status":"passed","title":"should generate consistent signature for same payload","duration":0,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","generateSignature"],"fullName":" WebhookValidator generateSignature should generate different signatures for different payloads","status":"passed","title":"should generate different signatures for different payloads","duration":0,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","generateSignature"],"fullName":" WebhookValidator generateSignature should generate valid hex signature","status":"passed","title":"should generate valid hex signature","duration":0,"failureMessages":[]}],"startTime":1757524503927,"endTime":1757524503930,"status":"passed","message":"","name":"/Users/lucascantoni/Desktop/AtendeAí 2.0/backend/services/whatsapp-service/tests/unit/webhookValidator.test.js"},{"assertionResults":[{"ancestorTitles":["","WhatsAppService","processWebhook"],"fullName":" WhatsAppService processWebhook should process webhook successfully","status":"failed","title":"should process webhook successfully","duration":19,"failureMessages":["Failed to adapt Meta payload: Cannot read properties of undefined (reading '0')"],"location":{"line":27,"column":19}},{"ancestorTitles":["","WhatsAppService","processWebhook"],"fullName":" WhatsAppService processWebhook should handle errors during webhook processing","status":"failed","title":"should handle errors during webhook processing","duration":8,"failureMessages":["expected [Function] to throw error including 'AI processing failed' but got 'Failed to adapt Meta payload: Cannot …'"],"location":{"line":161,"column":13}},{"ancestorTitles":["","WhatsAppService","sendMessage"],"fullName":" WhatsAppService sendMessage should send message successfully","status":"failed","title":"should send message successfully","duration":7005,"failureMessages":["Operation failed after 3 retries: Failed to send message via Meta API: fetch is not a function"],"location":{"line":28,"column":15}},{"ancestorTitles":["","WhatsAppService","processWithAI"],"fullName":" WhatsAppService processWithAI should process message with AI successfully","status":"failed","title":"should process message with AI successfully","duration":7006,"failureMessages":["Operation failed after 3 retries: Conversation Service error: Cannot read properties of undefined (reading 'ok')"],"location":{"line":28,"column":15}},{"ancestorTitles":["","WhatsAppService","persistMessage"],"fullName":" WhatsAppService persistMessage should persist message successfully","status":"failed","title":"should persist message successfully","duration":1,"failureMessages":["Database persistence failed: Cannot find module 'pg'\nRequire stack:\n- /Users/lucascantoni/Desktop/AtendeAí 2.0/backend/services/whatsapp-service/src/config/database.js\n- /Users/lucascantoni/Desktop/AtendeAí 2.0/backend/services/whatsapp-service/src/services/whatsappService.js"],"location":{"line":104,"column":19}},{"ancestorTitles":["","WhatsAppService","persistMessage"],"fullName":" WhatsAppService persistMessage should handle database persistence errors","status":"passed","title":"should handle database persistence errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","WhatsAppService","getClinicContext"],"fullName":" WhatsAppService getClinicContext should get clinic context successfully","status":"failed","title":"should get clinic context successfully","duration":3,"failureMessages":["expected null to be { aiPersonality: 'friendly', …(1) } // Object.is equality"],"location":{"line":276,"column":28}},{"ancestorTitles":["","WhatsAppService","getClinicContext"],"fullName":" WhatsAppService getClinicContext should handle clinic service errors","status":"passed","title":"should handle clinic service errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","WhatsAppService","getWhatsAppConfig"],"fullName":" WhatsAppService getWhatsAppConfig should get WhatsApp config successfully","status":"failed","title":"should get WhatsApp config successfully","duration":1,"failureMessages":["expected null to be { phoneNumber: '+5511888888888', …(1) } // Object.is equality"],"location":{"line":303,"column":28}},{"ancestorTitles":["","WhatsAppService","getWhatsAppConfig"],"fullName":" WhatsAppService getWhatsAppConfig should handle clinic service errors","status":"passed","title":"should handle clinic service errors","duration":1,"failureMessages":[]}],"startTime":1757524504032,"endTime":1757524518080,"status":"failed","message":"","name":"/Users/lucascantoni/Desktop/AtendeAí 2.0/backend/services/whatsapp-service/tests/unit/whatsappService.test.js"}]}