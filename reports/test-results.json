{"numTotalTestSuites":24,"numPassedTestSuites":24,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":43,"numPassedTests":43,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"startTime":1756471348934,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["","Contratos de API","Auth Service API (Porta 3001)"],"fullName":" Contratos de API Auth Service API (Porta 3001) POST /auth/login deve retornar contrato correto","status":"passed","title":"POST /auth/login deve retornar contrato correto","duration":2,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","Auth Service API (Porta 3001)"],"fullName":" Contratos de API Auth Service API (Porta 3001) POST /auth/refresh deve retornar contrato correto","status":"passed","title":"POST /auth/refresh deve retornar contrato correto","duration":0,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","Auth Service API (Porta 3001)"],"fullName":" Contratos de API Auth Service API (Porta 3001) POST /auth/logout deve retornar contrato correto","status":"passed","title":"POST /auth/logout deve retornar contrato correto","duration":0,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","Clinic Service API (Porta 3003)"],"fullName":" Contratos de API Clinic Service API (Porta 3003) GET /clinics deve retornar contrato correto","status":"passed","title":"GET /clinics deve retornar contrato correto","duration":1,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","Clinic Service API (Porta 3003)"],"fullName":" Contratos de API Clinic Service API (Porta 3003) POST /clinics deve retornar contrato correto","status":"passed","title":"POST /clinics deve retornar contrato correto","duration":0,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","User Service API (Porta 3002)"],"fullName":" Contratos de API User Service API (Porta 3002) GET /users/:clinicId deve retornar contrato correto","status":"passed","title":"GET /users/:clinicId deve retornar contrato correto","duration":0,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","User Service API (Porta 3002)"],"fullName":" Contratos de API User Service API (Porta 3002) POST /users deve retornar contrato correto","status":"passed","title":"POST /users deve retornar contrato correto","duration":1,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","WhatsApp Service API (Porta 3007)"],"fullName":" Contratos de API WhatsApp Service API (Porta 3007) GET /conversations/:clinicId deve retornar contrato correto","status":"passed","title":"GET /conversations/:clinicId deve retornar contrato correto","duration":0,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","WhatsApp Service API (Porta 3007)"],"fullName":" Contratos de API WhatsApp Service API (Porta 3007) POST /messages deve retornar contrato correto","status":"passed","title":"POST /messages deve retornar contrato correto","duration":0,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","WhatsApp Service API (Porta 3007)"],"fullName":" Contratos de API WhatsApp Service API (Porta 3007) POST /conversations/:id/takeover deve retornar contrato correto","status":"passed","title":"POST /conversations/:id/takeover deve retornar contrato correto","duration":0,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","WhatsApp Service API (Porta 3007)"],"fullName":" Contratos de API WhatsApp Service API (Porta 3007) POST /conversations/:id/release deve retornar contrato correto","status":"passed","title":"POST /conversations/:id/release deve retornar contrato correto","duration":0,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","Google Calendar Service API (Porta 3008)"],"fullName":" Contratos de API Google Calendar Service API (Porta 3008) GET /auth/google/url deve retornar contrato correto","status":"passed","title":"GET /auth/google/url deve retornar contrato correto","duration":1,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","Google Calendar Service API (Porta 3008)"],"fullName":" Contratos de API Google Calendar Service API (Porta 3008) GET /calendar/events deve retornar contrato correto","status":"passed","title":"GET /calendar/events deve retornar contrato correto","duration":0,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","Error Handling Contracts"],"fullName":" Contratos de API Error Handling Contracts deve retornar contrato de erro padronizado","status":"passed","title":"deve retornar contrato de erro padronizado","duration":0,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","Error Handling Contracts"],"fullName":" Contratos de API Error Handling Contracts deve retornar contrato de erro de validação","status":"passed","title":"deve retornar contrato de erro de validação","duration":0,"failureMessages":[]},{"ancestorTitles":["","Contratos de API","Rate Limiting Contracts"],"fullName":" Contratos de API Rate Limiting Contracts deve retornar contrato de rate limit","status":"passed","title":"deve retornar contrato de rate limit","duration":1,"failureMessages":[]}],"startTime":1756471349959,"endTime":1756471349965,"status":"passed","message":"","name":"/Users/lucascantoni/Desktop/AtendeAí 2.0/src/tests/api-contract.test.ts"},{"assertionResults":[{"ancestorTitles":["","ClinicService","list"],"fullName":" ClinicService list should list clinics successfully","status":"passed","title":"should list clinics successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","ClinicService","list"],"fullName":" ClinicService list should handle search filter","status":"passed","title":"should handle search filter","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicService","list"],"fullName":" ClinicService list should handle errors","status":"passed","title":"should handle errors","duration":6,"failureMessages":[]},{"ancestorTitles":["","ClinicService","getById"],"fullName":" ClinicService getById should get clinic by id successfully","status":"passed","title":"should get clinic by id successfully","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicService","getById"],"fullName":" ClinicService getById should handle clinic not found","status":"passed","title":"should handle clinic not found","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicService","create"],"fullName":" ClinicService create should create clinic successfully","status":"passed","title":"should create clinic successfully","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicService","create"],"fullName":" ClinicService create should validate required fields","status":"passed","title":"should validate required fields","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicService","create"],"fullName":" ClinicService create should validate WhatsApp number format","status":"passed","title":"should validate WhatsApp number format","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicService","create"],"fullName":" ClinicService create should handle duplicate WhatsApp number","status":"passed","title":"should handle duplicate WhatsApp number","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicService","update"],"fullName":" ClinicService update should update clinic successfully","status":"passed","title":"should update clinic successfully","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicService","update"],"fullName":" ClinicService update should handle clinic not found during update","status":"passed","title":"should handle clinic not found during update","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicService","delete"],"fullName":" ClinicService delete should delete clinic successfully","status":"passed","title":"should delete clinic successfully","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicService","delete"],"fullName":" ClinicService delete should handle clinic not found during delete","status":"passed","title":"should handle clinic not found during delete","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicService","getContext"],"fullName":" ClinicService getContext should get and generate context report","status":"passed","title":"should get and generate context report","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicService","validateWhatsAppNumber"],"fullName":" ClinicService validateWhatsAppNumber should return true for available number","status":"passed","title":"should return true for available number","duration":6,"failureMessages":[]},{"ancestorTitles":["","ClinicService","validateWhatsAppNumber"],"fullName":" ClinicService validateWhatsAppNumber should return false for existing number","status":"passed","title":"should return false for existing number","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicService","getActiveClinicCount"],"fullName":" ClinicService getActiveClinicCount should return active clinic count","status":"passed","title":"should return active clinic count","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicService","getActiveClinicCount"],"fullName":" ClinicService getActiveClinicCount should return 0 when no clinics found","status":"passed","title":"should return 0 when no clinics found","duration":0,"failureMessages":[]}],"startTime":1756471349974,"endTime":1756471349997,"status":"passed","message":"","name":"/Users/lucascantoni/Desktop/AtendeAí 2.0/src/tests/services/clinicService.test.ts"},{"assertionResults":[{"ancestorTitles":["","WebhookValidator","validateVerification"],"fullName":" WebhookValidator validateVerification should validate correct verification token","status":"passed","title":"should validate correct verification token","duration":1,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","validateVerification"],"fullName":" WebhookValidator validateVerification should throw error for invalid verification token","status":"passed","title":"should throw error for invalid verification token","duration":1,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","validateVerification"],"fullName":" WebhookValidator validateVerification should throw error for non-subscribe mode","status":"passed","title":"should throw error for non-subscribe mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","validateSignature"],"fullName":" WebhookValidator validateSignature should validate correct signature","status":"passed","title":"should validate correct signature","duration":1,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","validateSignature"],"fullName":" WebhookValidator validateSignature should throw error for invalid signature","status":"passed","title":"should throw error for invalid signature","duration":0,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","validateSignature"],"fullName":" WebhookValidator validateSignature should handle empty payload","status":"passed","title":"should handle empty payload","duration":0,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","generateSignature"],"fullName":" WebhookValidator generateSignature should generate consistent signature for same payload","status":"passed","title":"should generate consistent signature for same payload","duration":0,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","generateSignature"],"fullName":" WebhookValidator generateSignature should generate different signatures for different payloads","status":"passed","title":"should generate different signatures for different payloads","duration":1,"failureMessages":[]},{"ancestorTitles":["","WebhookValidator","generateSignature"],"fullName":" WebhookValidator generateSignature should generate valid hex signature","status":"passed","title":"should generate valid hex signature","duration":0,"failureMessages":[]}],"startTime":1756471349959,"endTime":1756471349963,"status":"passed","message":"","name":"/Users/lucascantoni/Desktop/AtendeAí 2.0/backend/services/whatsapp-service/tests/unit/webhookValidator.test.js"}]}